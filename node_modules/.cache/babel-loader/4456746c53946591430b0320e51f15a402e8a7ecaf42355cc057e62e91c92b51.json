{"ast":null,"code":"var _jsxFileName = \"D:\\\\k8wi__\\\\Desktop\\\\College\\\\FY project\\\\MedMap\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport map from '../resources/map.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [latitude, setLatitude] = React.useState('');\n  const [longitude, setLongitude] = React.useState('');\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n  function normalizeCoordinate(originalValue, minOriginal, maxOriginal, minTarget, maxTarget) {\n    return (originalValue - minOriginal) * (maxTarget - minTarget) / (maxOriginal - minOriginal) + minTarget;\n  }\n  const originalLatitude = latitude;\n  const normalizedLatitude = normalizeCoordinate(originalLatitude, 12.948195, 13.007500, 0, 2788);\n  const originalLongitude = longitude;\n  const normalizedLongitude = normalizeCoordinate(originalLongitude, 77.532607, 77.648346, 0, 5379);\n  console.log(\"Normalized Latitude:\", normalizedLatitude);\n  console.log(\"Normalized Longitude:\", normalizedLongitude);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'auto',\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: map,\n      alt: \"Map\",\n      useMap: \"#workmap\",\n      width: \"5379\",\n      height: \"2788\",\n      style: {\n        width: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n      name: \"workmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jdx9WX5ZHGNvsAFq0Qnd0eO6gns=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","map","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","useState","longitude","setLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","normalizeCoordinate","originalValue","minOriginal","maxOriginal","minTarget","maxTarget","originalLatitude","normalizedLatitude","originalLongitude","normalizedLongitude","console","log","style","overflow","width","height","children","src","alt","useMap","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["D:/k8wi__/Desktop/College/FY project/MedMap/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\"\r\nimport map from '../resources/map.jpeg'\r\nexport default function App() {\r\n  \r\n  const [latitude, setLatitude] = React.useState('');\r\n  const [longitude, setLongitude] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLatitude(position.coords.latitude);\r\n      setLongitude(position.coords.longitude);\r\n    });\r\n  }, []);\r\n\r\n  function normalizeCoordinate(originalValue, minOriginal, maxOriginal, minTarget, maxTarget) {\r\n    return (\r\n      ((originalValue - minOriginal) * (maxTarget - minTarget)) / (maxOriginal - minOriginal) + minTarget\r\n    );\r\n  }\r\n\r\n  const originalLatitude = latitude;\r\n  const normalizedLatitude = normalizeCoordinate(\r\n    originalLatitude,\r\n    12.948195,\r\n    13.007500,\r\n    0,\r\n    2788\r\n  );\r\n\r\n  const originalLongitude = longitude;\r\n  const normalizedLongitude = normalizeCoordinate(\r\n    originalLongitude,\r\n    77.532607,\r\n    77.648346,\r\n    0,\r\n    5379\r\n  );\r\n  console.log(\"Normalized Latitude:\", normalizedLatitude);\r\n  console.log(\"Normalized Longitude:\", normalizedLongitude);\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto', width: '100%', height: '100vh' }}>\r\n      <img\r\n        src={map}\r\n        alt=\"Map\"\r\n        useMap=\"#workmap\"\r\n        width=\"5379\"\r\n        height=\"2788\"\r\n        style={{ width: '100%', height: 'auto' }}\r\n      />\r\n      <map name=\"workmap\"></map>\r\n    </div>\r\n  );\r\n  }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAEpDR,KAAK,CAACW,SAAS,CAAC,MAAM;IACpBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACrDR,WAAW,CAACQ,QAAQ,CAACC,MAAM,CAACV,QAAQ,CAAC;MACrCI,YAAY,CAACK,QAAQ,CAACC,MAAM,CAACP,SAAS,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,SAASQ,mBAAmBA,CAACC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAEC,SAAS,EAAE;IAC1F,OACG,CAACJ,aAAa,GAAGC,WAAW,KAAKG,SAAS,GAAGD,SAAS,CAAC,IAAKD,WAAW,GAAGD,WAAW,CAAC,GAAGE,SAAS;EAEvG;EAEA,MAAME,gBAAgB,GAAGjB,QAAQ;EACjC,MAAMkB,kBAAkB,GAAGP,mBAAmB,CAC5CM,gBAAgB,EAChB,SAAS,EACT,SAAS,EACT,CAAC,EACD,IACF,CAAC;EAED,MAAME,iBAAiB,GAAGhB,SAAS;EACnC,MAAMiB,mBAAmB,GAAGT,mBAAmB,CAC7CQ,iBAAiB,EACjB,SAAS,EACT,SAAS,EACT,CAAC,EACD,IACF,CAAC;EACDE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,kBAAkB,CAAC;EACvDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,mBAAmB,CAAC;EAEzD,oBACEvB,OAAA;IAAK0B,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/D9B,OAAA;MACE+B,GAAG,EAAEjC,GAAI;MACTkC,GAAG,EAAC,KAAK;MACTC,MAAM,EAAC,UAAU;MACjBL,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbH,KAAK,EAAE;QAAEE,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFrC,OAAA;MAAKsC,IAAI,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAER;AAACnC,EAAA,CAnDqBD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}