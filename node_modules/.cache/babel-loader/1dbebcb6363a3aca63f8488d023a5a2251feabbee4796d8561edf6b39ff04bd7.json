{"ast":null,"code":"var _jsxFileName = \"D:\\\\k8wi__\\\\Desktop\\\\College\\\\FY project\\\\MedMap\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport map from '../resources/map.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [latitude, setLatitude] = React.useState('');\n  const [longitude, setLongitude] = React.useState('');\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n  function convertCoordinate(x1, y1) {\n    // Calculate scaling factors\n    const xScale = 537900 / 119.305;\n    const yScale = 278800 / 0.060052;\n\n    // Calculate translation factors\n    const xTranslation = 0 - 13.007769 * xScale;\n    const yTranslation = 0 - 77.531260 * yScale;\n\n    // Apply scaling and translation\n    const x2 = x1 * xScale + xTranslation;\n    const y2 = y1 * yScale + yTranslation;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  // Example usage:\n  const coordinateInSystem1 = {\n    x: 77.622327,\n    y: 12.987698\n  };\n  const coordinateInSystem2 = convertCoordinate(coordinateInSystem1.x, coordinateInSystem1.y);\n  console.log(coordinateInSystem2); // Output: { x: 2689.5054..., y: 1394 }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'auto',\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: map,\n      alt: \"Map\",\n      useMap: \"#workmap\",\n      width: \"5379\",\n      height: \"2788\",\n      style: {\n        width: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n      name: \"workmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jdx9WX5ZHGNvsAFq0Qnd0eO6gns=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","map","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","useState","longitude","setLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","convertCoordinate","x1","y1","xScale","yScale","xTranslation","yTranslation","x2","y2","x","y","coordinateInSystem1","coordinateInSystem2","console","log","style","overflow","width","height","children","src","alt","useMap","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["D:/k8wi__/Desktop/College/FY project/MedMap/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\"\r\nimport map from '../resources/map.jpeg'\r\nexport default function App() {\r\n  \r\n  const [latitude, setLatitude] = React.useState('');\r\n  const [longitude, setLongitude] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLatitude(position.coords.latitude);\r\n      setLongitude(position.coords.longitude);\r\n    });\r\n  }, []);\r\n\r\n  \r\nfunction convertCoordinate(x1, y1) {\r\n  // Calculate scaling factors\r\n  const xScale = 537900 / 119.305;\r\n  const yScale = 278800 / 0.060052;\r\n\r\n  // Calculate translation factors\r\n  const xTranslation = 0 - (13.007769 * xScale);\r\n  const yTranslation = 0 - (77.531260 * yScale);\r\n\r\n  // Apply scaling and translation\r\n  const x2 = (x1 * xScale) + xTranslation;\r\n  const y2 = (y1 * yScale) + yTranslation;\r\n\r\n  return { x: x2, y: y2 };\r\n}\r\n\r\n// Example usage:\r\nconst coordinateInSystem1 = { x: 77.622327, y: 12.987698 };\r\nconst coordinateInSystem2 = convertCoordinate(coordinateInSystem1.x, coordinateInSystem1.y);\r\nconsole.log(coordinateInSystem2); // Output: { x: 2689.5054..., y: 1394 }\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto', width: '100%', height: '100vh' }}>\r\n      <img\r\n        src={map}\r\n        alt=\"Map\"\r\n        useMap=\"#workmap\"\r\n        width=\"5379\"\r\n        height=\"2788\"\r\n        style={{ width: '100%', height: 'auto' }}\r\n      />\r\n      <map name=\"workmap\"></map>\r\n    </div>\r\n  );\r\n  }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAEpDR,KAAK,CAACW,SAAS,CAAC,MAAM;IACpBC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACrDR,WAAW,CAACQ,QAAQ,CAACC,MAAM,CAACV,QAAQ,CAAC;MACrCI,YAAY,CAACK,QAAQ,CAACC,MAAM,CAACP,SAAS,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGR,SAASQ,iBAAiBA,CAACC,EAAE,EAAEC,EAAE,EAAE;IACjC;IACA,MAAMC,MAAM,GAAG,MAAM,GAAG,OAAO;IAC/B,MAAMC,MAAM,GAAG,MAAM,GAAG,QAAQ;;IAEhC;IACA,MAAMC,YAAY,GAAG,CAAC,GAAI,SAAS,GAAGF,MAAO;IAC7C,MAAMG,YAAY,GAAG,CAAC,GAAI,SAAS,GAAGF,MAAO;;IAE7C;IACA,MAAMG,EAAE,GAAIN,EAAE,GAAGE,MAAM,GAAIE,YAAY;IACvC,MAAMG,EAAE,GAAIN,EAAE,GAAGE,MAAM,GAAIE,YAAY;IAEvC,OAAO;MAAEG,CAAC,EAAEF,EAAE;MAAEG,CAAC,EAAEF;IAAG,CAAC;EACzB;;EAEA;EACA,MAAMG,mBAAmB,GAAG;IAAEF,CAAC,EAAE,SAAS;IAAEC,CAAC,EAAE;EAAU,CAAC;EAC1D,MAAME,mBAAmB,GAAGZ,iBAAiB,CAACW,mBAAmB,CAACF,CAAC,EAAEE,mBAAmB,CAACD,CAAC,CAAC;EAC3FG,OAAO,CAACC,GAAG,CAACF,mBAAmB,CAAC,CAAC,CAAC;;EAEhC,oBACE1B,OAAA;IAAK6B,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/DjC,OAAA;MACEkC,GAAG,EAAEpC,GAAI;MACTqC,GAAG,EAAC,KAAK;MACTC,MAAM,EAAC,UAAU;MACjBL,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbH,KAAK,EAAE;QAAEE,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFxC,OAAA;MAAKyC,IAAI,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAER;AAACtC,EAAA,CA/CqBD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}