{"ast":null,"code":"var _jsxFileName = \"D:\\\\k8wi__\\\\Desktop\\\\College\\\\FY project\\\\MedMap\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport map from '../resources/map.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [latitude, setLatitude] = React.useState('');\n  const [longitude, setLongitude] = React.useState('');\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  }, []);\n  function normalizeCoordinates(line1Point, line1Start, line1End, line2Start, line2End) {\n    // Extract coordinates\n    const xOld = line1Point[0];\n    const yOld = line1Point[1];\n    const x1Old = line1Start[0];\n    const y1Old = line1Start[1];\n    const x1New = line1End[0];\n    const y1New = line1End[1];\n    const x2Old = line2Start[0];\n    const y2Old = line2Start[1];\n    const x2New = line2End[0];\n    const y2New = line2End[1];\n\n    // Normalize coordinates\n    const xNew = (xOld - x1Old) * (x2New - x2Old) / (x1New - x1Old) + x2Old;\n    const yNew = (yOld - y1Old) * (y2New - y2Old) / (y1New - y1Old) + y2Old;\n    return [xNew, yNew];\n  }\n\n  // Example coordinates\n  const line1Point = [12.987814, 77.621872];\n  const line1Start = [13.007769, 77.531260];\n  const line1End = [12.949203, 77.651178];\n  const line2Start = [0, 0];\n  const line2End = [5379, 2788];\n\n  // Normalize coordinates\n  const normalizedCoordinates = normalizeCoordinates(line1Point, line1Start, line1End, line2Start, line2End);\n\n  // Display result\n  console.log(\"Original Coordinates (Line 1):\", line1Point);\n  console.log(\"Normalized Coordinates (Line 2):\", normalizedCoordinates);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'auto',\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: map,\n      alt: \"Map\",\n      useMap: \"#workmap\",\n      width: \"5379\",\n      height: \"2788\",\n      style: {\n        width: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n      name: \"workmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jdx9WX5ZHGNvsAFq0Qnd0eO6gns=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","map","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","useState","longitude","setLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","normalizeCoordinates","line1Point","line1Start","line1End","line2Start","line2End","xOld","yOld","x1Old","y1Old","x1New","y1New","x2Old","y2Old","x2New","y2New","xNew","yNew","normalizedCoordinates","console","log","style","overflow","width","height","children","src","alt","useMap","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["D:/k8wi__/Desktop/College/FY project/MedMap/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\"\r\nimport map from '../resources/map.jpeg'\r\nexport default function App() {\r\n  \r\n  const [latitude, setLatitude] = React.useState('');\r\n  const [longitude, setLongitude] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLatitude(position.coords.latitude);\r\n      setLongitude(position.coords.longitude);\r\n    });\r\n  }, []);\r\n\r\n  \r\n  function normalizeCoordinates(line1Point, line1Start, line1End, line2Start, line2End) {\r\n    // Extract coordinates\r\n    const xOld = line1Point[0];\r\n    const yOld = line1Point[1];\r\n    \r\n    const x1Old = line1Start[0];\r\n    const y1Old = line1Start[1];\r\n    const x1New = line1End[0];\r\n    const y1New = line1End[1];\r\n    \r\n    const x2Old = line2Start[0];\r\n    const y2Old = line2Start[1];\r\n    const x2New = line2End[0];\r\n    const y2New = line2End[1];\r\n\r\n    // Normalize coordinates\r\n    const xNew = ((xOld - x1Old) * (x2New - x2Old)) / (x1New - x1Old) + x2Old;\r\n    const yNew = ((yOld - y1Old) * (y2New - y2Old)) / (y1New - y1Old) + y2Old;\r\n\r\n    return [xNew, yNew];\r\n}\r\n\r\n// Example coordinates\r\nconst line1Point = [12.987814, 77.621872];\r\nconst line1Start = [13.007769, 77.531260];\r\nconst line1End = [12.949203, 77.651178];\r\nconst line2Start = [0, 0];\r\nconst line2End = [5379, 2788];\r\n\r\n// Normalize coordinates\r\nconst normalizedCoordinates = normalizeCoordinates(line1Point, line1Start, line1End, line2Start, line2End);\r\n\r\n// Display result\r\nconsole.log(\"Original Coordinates (Line 1):\", line1Point);\r\nconsole.log(\"Normalized Coordinates (Line 2):\", normalizedCoordinates);\r\n\r\n\r\n  return (\r\n    <div style={{ overflow: 'auto', width: '100%', height: '100vh' }}>\r\n      <img\r\n        src={map}\r\n        alt=\"Map\"\r\n        useMap=\"#workmap\"\r\n        width=\"5379\"\r\n        height=\"2788\"\r\n        style={{ width: '100%', height: 'auto' }}\r\n      />\r\n      <map name=\"workmap\"></map>\r\n    </div>\r\n  );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}